---
- name: Kubeadm | Check api is up
  uri:
    url: "https://{{ ip | default(fallback_ips[inventory_hostname]) }}:{{ kube_apiserver_port }}/healthz"
    validate_certs: false
  when: inventory_hostname in groups['kube_control_plane']
  register: _result
  retries: 60
  delay: 5
  until: _result.status == 200

- name: Kubeadm | Kubernetes ConfigMap Backup
  when: inventory_hostname == first_kube_control_plane
  block:
    - name: "Backup Kubernetes configuration files"
      archive:
        path: /etc/kubernetes/
        dest: /etc/kubernetes-config-{{ ansible_date_time.date }}.tar.gz
        format: gz
    - name: Define variables
      set_fact:
        kube_reconfig_backup_dir: "/etc/kubernetes/reconfigure-bk"
        cm_name: "kubeadm-config"
        cm_namespace: "kube-system"
        kube_reconfig_backup_file: "cm-clusterconfig-{{ lookup('date', '%Y%m%d-%H%M%S') }}.yaml"
        kube_reconfig_backup_path: "{{ backup_dir }}/{{ backup_file }}"

    - name: Create backup directory if it doesn't exist
      file:
        path: "{{ kube_reconfig_backup_dir }}"
        state: directory
        mode: '0755'
        owner: root
        group: root
        recurse: true
        become: yes

    - name: Perform ConfigMap backup
      command: >
        kubectl get cm -n {{ cm_namespace }} {{ cm_name }} -o yaml > {{ kube_reconfig_backup_path }} &&
        kubectl delete cm -n {{ cm_namespace }} {{ cm_name }}
      become: yes
      register: cm_backup
      failed_when: cm_backup.rc != 0

- name: Kubeadm | Create reconfigure kubeadm config
  template:
    src: "cluster-configuration-replace.yaml.j2"
    dest: "{{ kube_reconfig_backup_dir }}/kubeadm-cluster-config-replace.yaml"
    mode: "0640"

- name: Kubeadm | Create new configmap for ClusterConfiguration
  command: "kubectl create configmap -n {{ cm_namespace }} {{ cm_name }} --from-file=ClusterConfiguration={{ kube_reconfig_backup_dir }}/kubeadm-cluster-config-replace.yaml"
  run_once: true
  when: inventory_hostname == first_kube_control_plane

- name: Kubeadm | Prepare ClusterConfiguration manifest
  lineinfile:
    path: "{{ kube_reconfig_backup_dir }}/kubeadm-cluster-config-replace.yaml"
    line: "{{ item }}"
    create: yes
    loop:
      - "apiVersion: kubeadm.k8s.io/v1beta3"
      - "kind: ClusterConfiguration"

- name: Kubeadm | Write new manifest for kubernetes control plane components
  command: "kubeadm init phase control-plane all --config {{ kube_reconfig_backup_dir }}/kubeadm-cluster-config-replace.yaml"
  when: kubeadm_already_run.stat.exists

- name: Kubeadm | Reconfigure local etcd
  command: "kubeadm init phase etcd local --config {{ kube_reconfig_backup_dir }}/kubeadm-cluster-config-replace.yaml"
  when: kubeadm_already_run.stat.exists
